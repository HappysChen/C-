函数对象
一、概念
重载函数调用操作的类，其对象常称为函数对象；
函数对象使用重载的()时，行为类似函数调用，也叫仿函数；//在前面学的STL过程中使用过，如for_each()函数里面、还有排序sort函数
本质：
函数对象（仿函数）是一个类，而不是函数
二、使用
使用时，可以像普通函数那样调用，可以有参数，可以有返回值
函数对象可以作为参数传递

谓词
一、概念：返回bool类型的仿函数成为谓词
1、返回bool值的一元函数是一元谓词//如果operator()接受一个参数
2、返回bool值的二元函数是二元谓词//如果operator()接受两个参数
二、使用
一元：
class typeclassname
{
public:
  bool operator()(const (typedef,数据类型，如类、int等) val) //只有一个参数
  {
   return val>5;// 如：寻找大于5的数
  }
};
二元：
在STL中改变默认的升序排序，改为降序，则需要将使用到仿函数，从而使用到二元谓词
class Compare
{
 bool operator()(int val1,int val2) //传入两个参数
 {
  return val1>val2;
 }
};
使用：sort(v.begin(),v.end(),Compare());

内建函数对象
   内建函数对象是指：STL中已经建立好的，可直接调用，但要包含头文件：functional
一、分类
1、算数仿函数
加plus<typename> 、减minus<typename>
乘multiplies<typename>、除divides<typename>
取模modulus<typename>、取反negate<typename>

2、关系仿函数
等于bool equal_to<typename>、不等于bool not_equal_to<typename>
大于bool greater<tpyename>、小于bool less<tpyename>
上面的sort还可以这样用：
sort(v.begin(),v.end(),greater<int>());
3、逻辑仿函数
逻辑与bool logical_and(typename)
逻辑非bool logical_not(typename)
逻辑或bool logical_or(typename)


