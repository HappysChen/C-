一、模板类vector
   1、创建vector模板类，要包含头文件vector，还要用<type>来表明对象的类型，以及动态分配内存，指明内存所需的矢量个数；
include<vector>
vector<int>Ratings(5);//创建int型的vector对象Ratings，里面的容量为5个时间复杂度是线性的
   2、其他成员函数
size()--返回容器内的元素个数
swap()--交换两个容器的内容
begin()--返回指向容器中第一个元素的迭代器
end()--返回一个表示超过容器尾的迭代器
erase()--删除矢量中给定区间的元素，因此接受两个迭代器的参数   
insert()--与erase()的相反，但接受三个迭代器的参数，第一个是指定新元素的插入位置，后两个指定是插入位置的区间
push_back(val)--在内存空间尾部插入元素val
pop_back()--数据尾部进行删除数据
   3、其他操作函数
   for_each(迭代器1，迭代器2，函数(输出函数名));//该函数可以在迭代器1和迭代器2之间输出容器的内容
   sort(迭代器1，迭代器2);//该函数可以按两个迭代器之间的元素进行排序，但必须要重载符号函数，operator函数,
或：sort(迭代器1，迭代器2，函数);//排序根据函数的参数类型来进行，如果没有这个函数，则默认调用operator函数
   random_shuffle(迭代器1，迭代器2);// 随机排序
   4、当原内存的空间不够时，会新开辟比原来大两倍的空间 
二、stack 栈
  简概：栈是一种”先进后出“的数据结构，只有一个出口，用push进行压栈和pop进行出栈
在C++中使用栈，需要包含头文件 stack,同时还要包含使用哪种容器作为底层容器。不允许遍历，不允许随机访问栈
例如：使用list作为底层容器
#include<list>
#include<stack>
....

使用：
  stack<int,list<int>>istack;//
  istack.push(元素)；//压栈
  istack.pop();//出栈，删除栈顶的元素
  istack.top();//将栈顶输出
  istack.size();//求出栈的大小
  bool.empty()const;//判空
相比C中，使用STL的栈更加方便，程序更加简便  
  
 三、deque模板类
  是双端队列，
  
 四、list
   list 是一个双向链表，具备前移、后移的能力，在插入操作、接合操作都不会造成原有的list失效;
在递增、递减、取值、成员取用操作时，递增时指向下一个节点，递减时指向上一个节点，取值时取的是节点的数值，成员取用时取用的是节点的成员
list的操作有：
push_front(),
push_back(),
erase(),//删除具体的某个元素
pop_front(),
pop_back(),//出列，从尾
clear(),//清除所有元素
remove(),//一个参数，移除元素
unique(),//在连续相同的元素时，只能出现一次，即合为单个
splice()//三个参数，接合
merge()//单个参数，合并
reverse(),//逆序
sort()//无参数 排序
transfer()//三个参数  迁移

